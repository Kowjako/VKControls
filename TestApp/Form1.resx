<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="vkFlatButton1.ButtonImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        P6ikygAAAABJRU5ErkJggg==
</value>
  </data>
</root>